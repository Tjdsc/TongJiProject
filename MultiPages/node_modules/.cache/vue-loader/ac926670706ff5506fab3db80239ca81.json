{"remainingRequest":"D:\\DSC\\软件学习\\git\\TongJiProject\\MultiPages\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DSC\\软件学习\\git\\TongJiProject\\MultiPages\\src\\pages\\BatteryManage\\analysis\\component\\singleCell.vue?vue&type=style&index=0&id=27186bfe&scoped=true&lang=css&","dependencies":[{"path":"D:\\DSC\\软件学习\\git\\TongJiProject\\MultiPages\\src\\pages\\BatteryManage\\analysis\\component\\singleCell.vue","mtime":1631439699031},{"path":"D:\\DSC\\软件学习\\git\\TongJiProject\\MultiPages\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DSC\\软件学习\\git\\TongJiProject\\MultiPages\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\DSC\\软件学习\\git\\TongJiProject\\MultiPages\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\DSC\\软件学习\\git\\TongJiProject\\MultiPages\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DSC\\软件学习\\git\\TongJiProject\\MultiPages\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmJnLXB1cnBsZSB7DQogIGJhY2tncm91bmQ6IHdoaXRlOw0KfQ0KLmdyaWQtY29udGVudCB7DQogIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgbWluLWhlaWdodDogMzIwcHg7DQogIG1pbi13aWR0aDogMzIwcHg7DQp9DQo="},{"version":3,"sources":["singleCell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAm+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"singleCell.vue","sourceRoot":"src/pages/BatteryManage/analysis/component","sourcesContent":["<template>\r\n\r\n  <div class=\"single-cell-com\" >\r\n    <row width=\"900px\" style=\"margin-left: 0px\">\r\n\r\n      <i-col span=\"12\">\r\n        <h2>容量衰退曲线：</h2>\r\n        <div id=\"f1\" class=\"grid-content bg-purple\" style=\"margin-left: 0px\"></div>\r\n      </i-col>\r\n\r\n      <i-col span=\"12\">\r\n        <h2>容量跳水预测结果：</h2>\r\n        <div id=\"f2\" class=\"grid-content bg-purple\"></div>\r\n      </i-col>\r\n    </row>\r\n\r\n    <row >\r\n      <i-col span=\"12\">\r\n        <h2>容量跳水角度评估曲线：</h2>\r\n        <div id=\"f3\" class=\"grid-content bg-purple\"></div>\r\n      </i-col>\r\n\r\n      <i-col span=\"12\">\r\n        <h2>容量跳水面积评估曲线：</h2>\r\n        <div id=\"f4\" class=\"grid-content bg-purple\"></div>\r\n      </i-col>\r\n    </row>\r\n\r\n    <row >\r\n      <i-col span=\"12\">\r\n        <h2>ICA曲线：</h2>\r\n        <div id=\"ic-dv-fig\" class=\"grid-content bg-purple\"></div>\r\n      </i-col>\r\n\r\n      <i-col span=\"12\">\r\n        <h2>峰值与老化相关性：</h2>\r\n        <div id=\"ic-max-fig\" class=\"grid-content bg-purple\"></div>\r\n      </i-col>\r\n    </row>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport * as echarts from \"echarts\";\r\nimport axios from \"axios\";\r\nimport QS from \"qs\";\r\n\r\n\r\nvar myChart1\r\nvar myChart2\r\nvar myChart3\r\nvar myChart4\r\nvar myChart_IC_DV\r\nvar myChart_IC_DV_MAX\r\n\r\nexport default {\r\n  name: \"singleCell\",\r\n  cell_name:'',\r\n  props: ['item'],\r\n\r\n  data(){\r\n    return{\r\n      /*****************************************************/\r\n\r\n      option1 : {\r\n        // title:{\r\n        //   text:'容量曲线',\r\n        //   left:'50%'\r\n        // },\r\n        toolbox:{\r\n          feature: {\r\n            dataView: {show: true, readOnly: false},\r\n            dataZoom: {\r\n              yAxisIndex: 'none'\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        tooltip:{\r\n          trigger:\"axis\",\r\n          confine:true,\r\n          position:['100%','100%'],\r\n          axisPointer: {\r\n            type: 'cross',\r\n            crossStyle: {\r\n              color: '#999'\r\n            }\r\n          },\r\n        },\r\n        xAxis: {\r\n          name:'循环次数',\r\n          type: 'category',\r\n\r\n          data: null,\r\n          nameLocation:'center',\r\n          nameGap:30,\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n\r\n        yAxis: [{\r\n          name:'容量/Ah',\r\n          type: 'value',\r\n          min: 0.8,\r\n          max: 1.1,\r\n          // nameLocation:'center',\r\n          // nameGap:35,\r\n        },{\r\n          name: '容量保持率/%',\r\n          type: 'value',\r\n          min: 50,\r\n          max: 110,\r\n          nameLocation: 'center',\r\n          nameGap: 30,\r\n        },],\r\n        legend:{\r\n          // orient:'vertical',\r\n          // left:0,\r\n          top:15,\r\n          data:[\"容量\",\"容量保持率\"]\r\n        },\r\n\r\n        series: [{\r\n          data: null,\r\n          type: 'line',\r\n          symbol:'none',\r\n          smooth: false,\r\n          markPoint:{\r\n            data:null,\r\n\r\n          }\r\n        },{\r\n          data: null,\r\n          type: 'line',\r\n          symbol:'none',\r\n          smooth: false,\r\n          markPoint:{\r\n            data:null,\r\n\r\n          }\r\n        }],\r\n\r\n        animation:true,\r\n      },\r\n\r\n\r\n      option2 : {\r\n        toolbox:{\r\n          feature: {\r\n            dataView: {show: true, readOnly: false},\r\n            dataZoom: {\r\n              yAxisIndex: 'none'\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        tooltip:{\r\n          trigger:\"axis\",\r\n          confine:true,\r\n          position:['100%','100%'],\r\n          axisPointer: {\r\n            type: 'cross',\r\n            crossStyle: {\r\n              color: '#999'\r\n            }\r\n          },\r\n        },\r\n        legend:{\r\n          // orient:'vertical',\r\n          // left:'50%',\r\n          top:15,\r\n          data:[\"预测值\",\"真实值\"]\r\n        },\r\n        xAxis: {\r\n          name:'循环次数',\r\n          type: 'category',\r\n\r\n          data: null,\r\n          nameLocation:'center',\r\n          nameGap:30,\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n\r\n        yAxis: {\r\n          name:'距离跳水的循环次数',\r\n          type: 'value',\r\n          offset:-20,\r\n\r\n        },\r\n        series: [\r\n          {\r\n            type: 'line',\r\n            data: null,\r\n            smooth: true,\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: null,\r\n            smooth: true,\r\n\r\n          }\r\n        ],\r\n        animation:true\r\n      },\r\n\r\n\r\n      option3 : {\r\n        toolbox:{\r\n          feature: {\r\n            dataView: {show: true, readOnly: false},\r\n            dataZoom: {\r\n              yAxisIndex: 'none'\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        tooltip:{\r\n          trigger:\"axis\",\r\n          confine:true,\r\n          position:['100%','100%'],\r\n          axisPointer: {\r\n            type: 'cross',\r\n            crossStyle: {\r\n              color: '#999'\r\n            }\r\n          },\r\n        },\r\n\r\n        xAxis: {\r\n          name:'循环次数',\r\n          type: 'category',\r\n\r\n          data: null,\r\n          nameLocation:'center',\r\n          nameGap:30,\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        yAxis: {\r\n          name:'转折程度/%',\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: null,\r\n          type: 'line',\r\n          smooth: true,\r\n          markLine: {\r\n\r\n            symbol:\"none\",\r\n            data: [\r\n              {\r\n                silent:false,             //鼠标悬停事件  true没有，false有\r\n                lineStyle:{               //警戒线的样式  ，虚实  颜色\r\n                  type:\"dashed\",\r\n                  color:\"red\",\r\n                  width:2,\r\n\r\n                },\r\n                label:{\r\n                  position:'end',\r\n                  formatter:\"30%\",\r\n\r\n\r\n                },\r\n                yAxis:30\r\n              }\r\n            ]\r\n\r\n          },\r\n          markPoint:{\r\n            data:null,\r\n\r\n          }\r\n        }],\r\n\r\n        animation:true\r\n      },\r\n\r\n\r\n      option4 : {\r\n        toolbox:{\r\n          feature: {\r\n            dataView: {show: true, readOnly: false},\r\n            dataZoom: {\r\n              yAxisIndex: 'none'\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        tooltip:{\r\n          trigger:\"axis\",\r\n          confine:true,\r\n          position:['100%','100%'],\r\n          axisPointer: {\r\n            type: 'cross',\r\n            crossStyle: {\r\n              color: '#999'\r\n            }\r\n          },\r\n        },\r\n\r\n        xAxis: {\r\n          name:'循环次数',\r\n          type: 'category',\r\n\r\n          data: null,\r\n          nameLocation:'center',\r\n          nameGap:30,\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        yAxis: {\r\n          name:'转折程度/%',\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: null,\r\n          type: 'line',\r\n          smooth: true,\r\n          markLine: {\r\n\r\n            symbol:\"none\",\r\n            data: [\r\n              {\r\n                silent:false,             //鼠标悬停事件  true没有，false有\r\n                lineStyle:{               //警戒线的样式  ，虚实  颜色\r\n                  type:\"dashed\",\r\n                  color:\"red\",\r\n                  width:2,\r\n\r\n                },\r\n                label:{\r\n                  position:'end',\r\n                  formatter:\"30%\",\r\n\r\n\r\n                },\r\n                yAxis:30\r\n              }\r\n            ]\r\n\r\n          },\r\n          markPoint:{\r\n            data:null,\r\n\r\n          }\r\n        }],\r\n        animation:true\r\n      },\r\n\r\n      data_IC_DV:{\r\n        toolbox:{\r\n          feature: {\r\n            dataView: {show: true, readOnly: false},\r\n            dataZoom: {\r\n              yAxisIndex: 'none'\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        tooltip:{\r\n          trigger:\"axis\",\r\n          confine:true,\r\n          position:['100%','100%'],\r\n          axisPointer: {\r\n            type: 'cross',\r\n            crossStyle: {\r\n              color: '#999'\r\n            }\r\n          },\r\n        },\r\n\r\n        xAxis: {\r\n          name:'电压/V',\r\n          type: 'category',\r\n\r\n          data: null,\r\n          nameLocation:'center',\r\n          nameGap:30,\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        yAxis: {\r\n          name:'dQ/dV',\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }, {\r\n            data: null,\r\n            type: 'line',\r\n            smooth: false\r\n          }],\r\n        animation:true\r\n      },\r\n\r\n      data_IC_DV_MAX: {\r\n        toolbox:{\r\n          feature: {\r\n            dataView: {show: true, readOnly: false},\r\n            dataZoom: {\r\n              yAxisIndex: 'none'\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        tooltip:{\r\n          trigger:\"axis\",\r\n          confine:true,\r\n          position:['100%','100%'],\r\n          axisPointer: {\r\n            type: 'cross',\r\n            crossStyle: {\r\n              color: '#999'\r\n            }\r\n          },\r\n        },\r\n\r\n        xAxis: {\r\n          name:'容量',\r\n          type: 'category',\r\n\r\n          data: null,\r\n          nameLocation:'center',\r\n          nameGap:30,\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        yAxis: {\r\n          name:'最高峰值',\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: null,\r\n          type: 'line',\r\n          smooth: false\r\n        }],\r\n        animation:true\r\n      },\r\n\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n\r\n    var cell_name = this.$store.state.current_cell_name\r\n\r\n    myChart1 = echarts.init(document.getElementById('f1'));\r\n    myChart2 = echarts.init(document.getElementById('f2'));\r\n    myChart3 = echarts.init(document.getElementById('f3'));\r\n    myChart4 = echarts.init(document.getElementById('f4'));\r\n    myChart_IC_DV= echarts.init(document.getElementById('ic-dv-fig'));\r\n    myChart_IC_DV_MAX= echarts.init(document.getElementById('ic-max-fig'));\r\n\r\n    this.$store.state.fig1_capacity = this.$store.state.all_cell_data[cell_name].capacity.capacity\r\n    this.$store.state.fig1_cycle = this.$store.state.all_cell_data[cell_name].capacity.cycle\r\n\r\n    for (let i in this.$store.state.fig1_cycle){\r\n      this.$store.state.fig1_capacity_rate[i] = (this.$store.state.fig1_capacity[i]/this.$store.state.fig1_capacity[0])*100\r\n    }\r\n    // console.log(this.$store.state.fig1_capacity_rate)\r\n    // console.log( this.$store.state.fig1_cycle)\r\n    // console.log( this.$store.state.fig1_capacity)\r\n    this.$store.state.knee_point = this.$store.state.all_cell_data[cell_name].knee_point.knee_point\r\n\r\n    this.$store.state.normalized_capacity = this.$store.state.all_cell_data[cell_name].knee_degree.normalized_capacity\r\n    this.$store.state.normalized_cycle = this.$store.state.all_cell_data[cell_name].capacity.normalized_cycle\r\n\r\n    this.$store.state.angle_degree = this.$store.state.all_cell_data[cell_name].online_degree_all.angle_degree\r\n    this.$store.state.square_degree = this.$store.state.all_cell_data[cell_name].online_degree_all.square_degree\r\n\r\n    // console.log( this.$store.state.angle_degree)\r\n    // console.log( this.$store.state.square_degree)\r\n    this.$store.state.online_rank = this.$store.state.all_cell_data[cell_name].online_rank_all.online_rank\r\n\r\n    this.$store.state.predicted_ctk = this.$store.state.all_cell_data[cell_name].predicted_ctk.predicted_ctk\r\n    this.$store.state.true_ctk = this.$store.state.all_cell_data[cell_name].predicted_ctk.true_ctk\r\n\r\n\r\n\r\n    // console.log(this.$store.state.all_cell_data[cellName])\r\n\r\n    // console.log(cellName)\r\n    this.option1.xAxis.data = this.cycle\r\n    this.option1.series[0].name = '容量'\r\n    this.option1.series[0].data = this.capacity\r\n    this.option1.series[1].name = '容量保持率'\r\n    this.option1.series[1].data = this.$store.state.fig1_capacity_rate\r\n    this.option1.series[1].yAxisIndex = 1\r\n    this.option1.series[0].markPoint = {\r\n      data: [\r\n        {\r\n          name: '拐点',\r\n          value: '拐点:' + this.knee_point,\r\n          xAxis: this.knee_point,\r\n          yAxis: this.capacity[this.knee_point],\r\n          symbol: \"pin\",\r\n          symbolSize: 50,\r\n          symbolOffset: ['0', '0']\r\n\r\n        }\r\n      ]\r\n\r\n    }\r\n    this.option2.xAxis.data = this.cycle\r\n    this.option2.series[0].data = this.predicted_ctk\r\n    this.option2.series[0].name = '预测值'\r\n    this.option2.series[1].data = this.true_ctk\r\n    this.option2.series[1].name = '真实值'\r\n\r\n    this.option3.xAxis.data = this.cycle\r\n    this.option3.series[0].data = this.angle_degree\r\n    this.option3.series[0].markPoint = {\r\n      data: [\r\n        {\r\n          name: '拐点',\r\n          value: '拐点:' + this.knee_point,\r\n          xAxis: this.knee_point,\r\n          yAxis: this.$store.state.angle_degree[this.knee_point],\r\n          symbol: \"pin\",\r\n          symbolSize: 50,\r\n          symbolOffset: ['0', '0']\r\n\r\n        }\r\n      ]\r\n\r\n    }\r\n\r\n    this.option4.xAxis.data = this.cycle\r\n    this.option4.series[0].data = this.square_degree\r\n    this.option4.series[0].markPoint = {\r\n      data: [\r\n        {\r\n          name: '拐点',\r\n          value: '拐点:' + this.knee_point,\r\n          xAxis: this.knee_point,\r\n          yAxis: this.$store.state.square_degree[this.knee_point],\r\n          symbol: \"pin\",\r\n          symbolSize: 50,\r\n          symbolOffset: ['0', '0']\r\n\r\n        }\r\n      ]\r\n\r\n    }\r\n\r\n    // this.option1.xAxis.data = this.cycle\r\n    // this.option1.series[0].data = this.capacity\r\n    // this.option1.series[0].name = '容量'\r\n    // this.option1.series[1].data = this.$store.state.online_rank\r\n    // this.option1.series[1].name = '容量保持率'\r\n    // this.option1.series[1].yAxisIndex = 1\r\n    // this.option1.series[0].markPoint = {\r\n    // data: [\r\n    //     {\r\n    //       name: '拐点',\r\n    //       value: '拐点:' + this.knee_point,\r\n    //       xAxis: this.knee_point,\r\n    //       yAxis: this.capacity[this.knee_point],\r\n    //       symbol: \"pin\",\r\n    //       symbolSize: 50,\r\n    //       symbolOffset: ['0', '0']\r\n    //\r\n    //     }\r\n    //   ]\r\n    //\r\n    // }\r\n    // this.option2.xAxis.data = this.cycle\r\n    // this.option2.series[0].data = this.predicted_ctk\r\n    // this.option2.series[0].name = '预测值'\r\n    // this.option2.series[1].data = this.true_ctk\r\n    // this.option2.series[1].name = '真实值'\r\n    //\r\n    // this.option3.xAxis.data = this.cycle\r\n    // this.option3.series[0].data = this.angle_degree\r\n    // this.option3.series[0].markPoint = {\r\n    //   data: [\r\n    //     {\r\n    //       name: '拐点',\r\n    //       value: '拐点:' + this.knee_point,\r\n    //       xAxis: this.knee_point,\r\n    //       yAxis: this.$store.state.angle_degree[this.knee_point],\r\n    //       symbol: \"pin\",\r\n    //       symbolSize: 50,\r\n    //       symbolOffset: ['0', '0']\r\n    //\r\n    //     }\r\n    //   ]\r\n    //\r\n    // }\r\n    //\r\n    // this.option4.xAxis.data = this.cycle\r\n    // this.option4.series[0].data = this.square_degree\r\n    // this.option4.series[0].markPoint = {\r\n    //   data: [\r\n    //     {\r\n    //       name: '拐点',\r\n    //       value: '拐点:' + this.knee_point,\r\n    //       xAxis: this.knee_point,\r\n    //       yAxis: this.$store.state.square_degree[this.knee_point],\r\n    //       symbol: \"pin\",\r\n    //       symbolSize: 50,\r\n    //       symbolOffset: ['0', '0']\r\n    //\r\n    //     }\r\n    //   ]\r\n    //\r\n    // }\r\n\r\n\r\n\r\n    this.data_IC_DV.xAxis.data = this.$store.state.V_lin[0]\r\n    // this.data_IC_DV.series[0].data = this.$store.state.IC_DV[0]\r\n    // this.data_IC_DV.series[1].data = this.$store.state.IC_DV[1]\r\n\r\n    for (var i=0;i<this.$store.state.IC_DV.length;i++){\r\n      this.data_IC_DV.series[i].data = this.$store.state.IC_DV[i]\r\n    }\r\n    // console.log(this.$store.state.IC_DV)\r\n    // console.log(this.data_IC_DV.series)\r\n\r\n    this.data_IC_DV_MAX.xAxis.data = this.$store.state.fig1_capacity\r\n    this.data_IC_DV_MAX.series[0].data = this.$store.state.abs_IC_DV_max\r\n    //\r\n    myChart1.setOption(this.option1);\r\n    myChart2.setOption(this.option2);\r\n    myChart3.setOption(this.option3);\r\n    myChart4.setOption(this.option4);\r\n    myChart_IC_DV.setOption(this.data_IC_DV)\r\n    myChart_IC_DV_MAX.setOption(this.data_IC_DV_MAX)\r\n  },\r\n\r\n  methods: {\r\n\r\n\r\n    test_all_cell(cellName){\r\n      // myChart1 = echarts.init(document.getElementById('f1'));\r\n      // myChart2 = echarts.init(document.getElementById('f2'));\r\n      // myChart3 = echarts.init(document.getElementById('f3'));\r\n      // myChart4 = echarts.init(document.getElementById('f4'));\r\n\r\n      this.$store.state.fig1_capacity = this.$store.state.all_cell_data[cellName].capacity.capacity\r\n      this.$store.state.fig1_cycle = this.$store.state.all_cell_data[cellName].capacity.cycle\r\n\r\n      for (let i in this.$store.state.fig1_cycle){\r\n        this.$store.state.fig1_capacity_rate[i] = (this.$store.state.fig1_capacity[i]/this.$store.state.fig1_capacity[0])*100\r\n      }\r\n      // console.log(this.$store.state.fig1_capacity_rate)\r\n      // console.log( this.$store.state.fig1_cycle)\r\n      // console.log( this.$store.state.fig1_capacity)\r\n      this.$store.state.knee_point = this.$store.state.all_cell_data[cellName].knee_point.knee_point\r\n\r\n      this.$store.state.normalized_capacity = this.$store.state.all_cell_data[cellName].knee_degree.normalized_capacity\r\n      this.$store.state.normalized_cycle = this.$store.state.all_cell_data[cellName].capacity.normalized_cycle\r\n\r\n      this.$store.state.angle_degree = this.$store.state.all_cell_data[cellName].online_degree_all.angle_degree\r\n      this.$store.state.square_degree = this.$store.state.all_cell_data[cellName].online_degree_all.square_degree\r\n\r\n      // console.log( this.$store.state.angle_degree)\r\n      // console.log( this.$store.state.square_degree)\r\n      this.$store.state.online_rank = this.$store.state.all_cell_data[cellName].online_rank_all.online_rank\r\n\r\n      this.$store.state.predicted_ctk = this.$store.state.all_cell_data[cellName].predicted_ctk.predicted_ctk\r\n      this.$store.state.true_ctk = this.$store.state.all_cell_data[cellName].predicted_ctk.true_ctk\r\n\r\n\r\n\r\n      // console.log(this.$store.state.all_cell_data[cellName])\r\n\r\n      // console.log(cellName)\r\n      this.option1.xAxis.data = this.cycle\r\n      this.option1.series[0].name = '容量'\r\n      this.option1.series[0].data = this.capacity\r\n      this.option1.series[1].name = '容量保持率'\r\n      this.option1.series[1].data = this.$store.state.fig1_capacity_rate\r\n      this.option1.series[1].yAxisIndex = 1\r\n      this.option1.series[0].markPoint = {\r\n        data: [\r\n          {\r\n            name: '拐点',\r\n            value: '拐点:' + this.knee_point,\r\n            xAxis: this.knee_point,\r\n            yAxis: this.capacity[this.knee_point],\r\n            symbol: \"pin\",\r\n            symbolSize: 50,\r\n            symbolOffset: ['0', '0']\r\n\r\n          }\r\n        ]\r\n\r\n      }\r\n      this.option2.xAxis.data = this.cycle\r\n      this.option2.series[0].data = this.predicted_ctk\r\n      this.option2.series[0].name = '预测值'\r\n      this.option2.series[1].data = this.true_ctk\r\n      this.option2.series[1].name = '真实值'\r\n\r\n      this.option3.xAxis.data = this.cycle\r\n      this.option3.series[0].data = this.angle_degree\r\n      this.option3.series[0].markPoint = {\r\n        data: [\r\n          {\r\n            name: '拐点',\r\n            value: '拐点:' + this.knee_point,\r\n            xAxis: this.knee_point,\r\n            yAxis: this.$store.state.angle_degree[this.knee_point],\r\n            symbol: \"pin\",\r\n            symbolSize: 50,\r\n            symbolOffset: ['0', '0']\r\n\r\n          }\r\n        ]\r\n\r\n      }\r\n\r\n      this.option4.xAxis.data = this.cycle\r\n      this.option4.series[0].data = this.square_degree\r\n      this.option4.series[0].markPoint = {\r\n        data: [\r\n          {\r\n            name: '拐点',\r\n            value: '拐点:' + this.knee_point,\r\n            xAxis: this.knee_point,\r\n            yAxis: this.$store.state.square_degree[this.knee_point],\r\n            symbol: \"pin\",\r\n            symbolSize: 50,\r\n            symbolOffset: ['0', '0']\r\n\r\n          }\r\n        ]\r\n\r\n      }\r\n\r\n      myChart1.setOption(this.option1);\r\n      myChart2.setOption(this.option2);\r\n      myChart3.setOption(this.option3);\r\n      myChart4.setOption(this.option4);\r\n    //\r\n    //   myChart1.setOption();\r\n    //   myChart2.setOption();\r\n    //   myChart3.setOption();\r\n    //   myChart4.setOption();\r\n    },\r\n\r\n    get_Cell_Data(item) {\r\n      this.getCapacity(item)\r\n      // this.getKnee_Point(item)\r\n      // this.getPredicted_ctk(item)\r\n      // this.getKnee_degree(item)\r\n      // this.getOnline_degree_all(name)\r\n      // this.getOnline_rank_all(name)\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n    getCapacity(name) {\r\n      axios.post(this.$store.state.http_header + this.$store.state.ip + this.$store.state.route_capacity, QS.stringify({\r\n        name: name,\r\n        project_id: 0,\r\n      })).then(response => {\r\n        console.log(response);\r\n        this.$store.state.fig1_capacity = response.data.capacity;\r\n        this.$store.state.fig1_cycle = response.data.cycle;\r\n      })\r\n\r\n\r\n    },\r\n\r\n    getKnee_Point(name) {\r\n      axios.post(this.$store.state.http_header + this.$store.state.ip + this.$store.state.route_knee_point, QS.stringify({\r\n        name: name,\r\n        project_id: 0,\r\n\r\n      })).then(response => {\r\n        console.log(response);\r\n        this.$store.state.knee_point = response.data.knee_point;\r\n      })\r\n    },\r\n\r\n    getKnee_degree(name) {\r\n      axios.post(this.$store.state.http_header + this.$store.state.ip + this.$store.state.route_knee_degree, QS.stringify({\r\n        name: name,\r\n        project_id: 0,\r\n\r\n      })).then(response => {\r\n        console.log(response);\r\n        this.$store.state.angle_method = response.data.angle_method;\r\n        this.$store.state.square_method = response.data.square_method;\r\n      })\r\n    },\r\n\r\n    getOnline_degree_all(name) {\r\n      axios.post(this.$store.state.http_header + this.$store.state.ip + this.$store.state.route_online_degree_all, QS.stringify({\r\n        name: name,\r\n        project_id: 0,\r\n\r\n      })).then(response => {\r\n        console.log(response);\r\n        this.$store.state.online_degree = response.data.online_degree;\r\n        this.$store.state.valid_length = response.data.valid_length;\r\n      })\r\n    },\r\n\r\n    getOnline_rank_all(name) {\r\n      axios.post(this.$store.state.http_header + this.$store.state.ip + this.$store.state.route_online_rank_all, QS.stringify({\r\n        name: name,\r\n        project_id: 0,\r\n\r\n      })).then(response => {\r\n        console.log(response);\r\n        this.$store.state.online_rank = response.data.online_rank;\r\n        this.$store.state.diff_cycle = response.data.diff_cycle;\r\n      })\r\n    },\r\n\r\n    getPredicted_ctk(name) {\r\n      axios.post(this.$store.state.http_header + this.$store.state.ip + this.$store.state.route_predicted_ctk, QS.stringify({\r\n        name: name,\r\n        project_id: 0,\r\n\r\n      })).then(response => {\r\n        console.log(response);\r\n        this.$store.state.predicted_ctk = response.data.predicted_ctk;\r\n        this.$store.state.true_ctk = response.data.true_ctk;\r\n      })\r\n    },\r\n\r\n  },\r\n\r\n  created() {\r\n    // this.test_all_cell()\r\n    // this.item = 'ccc'\r\n\r\n  },\r\n  watch: {\r\n\r\n    //\r\n    // 'current_cell_name': {\r\n    //   immediate: true,\r\n    //   deep: true,\r\n    //   handler(newVal, oldVal) {\r\n    //     console.log(newVal);\r\n    //     console.log(oldVal);\r\n    //\r\n    //     // this.get_Cell_Data(newVal)\r\n    //\r\n    //     this.test_all_cell(newVal)\r\n    //\r\n    //\r\n    //   },\r\n    // },\r\n\r\n    item: {\r\n\r\n      handler(newVal, oldVal) {\r\n        console.log(newVal);\r\n        console.log(oldVal);\r\n\r\n        // this.get_Cell_Data(newVal)\r\n\r\n        this.test_all_cell(newVal)\r\n\r\n\r\n      },\r\n\r\n      // immediate: true,\r\n      // deep:true,\r\n    },\r\n\r\n\r\n\r\n    // params:{\r\n    //\r\n    //   item:function (newVal,oldVal) {\r\n    //     console.log(newVal);\r\n    //     console.log(oldVal);\r\n    //\r\n    //     // this.get_Cell_Data(newVal)\r\n    //\r\n    //     this.test_all_cell(newVal)\r\n    //   },\r\n    //\r\n    //   deep:true,\r\n    //\r\n    // },\r\n    //\r\n    // property:{\r\n    //   immediate:true,\r\n    //\r\n    //   item:function (newVal,oldVal) {\r\n    //     console.log(newVal);\r\n    //     console.log(oldVal);\r\n    //\r\n    //     // this.get_Cell_Data(newVal)\r\n    //\r\n    //     this.test_all_cell(newVal)\r\n    //   }\r\n    // },\r\n\r\n\r\n\r\n  },\r\n\r\n  computed: {\r\n\r\n    capacity() {\r\n        return this.$store.state.fig1_capacity\r\n      },\r\n    cycle() {\r\n        return this.$store.state.fig1_cycle\r\n      },\r\n    knee_point() {\r\n        return this.$store.state.knee_point\r\n      },\r\n    predicted_ctk() {\r\n        return this.$store.state.predicted_ctk\r\n      },\r\n    true_ctk() {\r\n        return this.$store.state.true_ctk\r\n      },\r\n    angle_degree() {\r\n        return this.$store.state.angle_degree\r\n      },\r\n    square_degree() {\r\n        return this.$store.state.square_degree\r\n      },\r\n\r\n    current_cell_name(){\r\n\r\n      return this.$store.state.current_cell_name\r\n\r\n    }\r\n\r\n  },\r\n\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.bg-purple {\r\n  background: white;\r\n}\r\n.grid-content {\r\n  border-radius: 4px;\r\n  min-height: 320px;\r\n  min-width: 320px;\r\n}\r\n</style>\r\n"]}]}